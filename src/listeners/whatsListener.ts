import WAWebJS from 'whatsapp-web.js';

import fs from 'fs';
import qrcode from 'qrcode-terminal';

import userRepository from '../repositories/userRepository.js';
import botRepository from '../repositories/botRepository.js';
import sessionService from '../services/sessionService.js';


class WhatsListener {

    onAuth(){

        console.log('ü§ñ: Fui autenticado com sucesso !');

        fs.writeFile('./localAuth/auth.key','Autenticado',function(){

        });

    }

    async onMessage( message: WAWebJS.Message ) {

        let { body, id: { remote: phone }, hasMedia } = message;

        //Verifica se um usu√°rio j√° existe em mem√≥ria
        const verifyIfUsersExistsInMemory = userRepository.find( phone );

        // Caso n√£o exista, registra ele em mem√≥ria e cria uma nova inst√¢ncia do bot para este usu√°rio
        if ( !verifyIfUsersExistsInMemory ){

            const user = userRepository.register({
                phone,
                message: body,
            });

            botRepository.create({
                owner: user
            });


        }


        //Busca o usu√°rio criado anteriormente em mem√≥ria
        const user = userRepository.find(phone);

        //Busca a inst√¢ncia do bot criado anteriormente em mem√≥ria pelo n√∫mero do usu√°rio
        const bot = botRepository.find(phone);

        //Condid√ß√£o aplicada para verificar se a mensagem do usu√°rio foi multim√≠dia
        if( hasMedia ){

            await bot!.say('Infelizmente n√£o consigo reconhecer mensagens multim√≠dia. Por favor, envie apenas textos ! üòÅ');

            return;

        }

       if( bot && user ){

            if( body[0] === '/' ){

                return await bot.commands(body);

            }

            //Busca toas as sess√µes referentes a aquele usu√°rio pelo seu n√∫mero de telefone
            const sessions = await sessionService.findSessions(phone);

             //Aplica as sess√µes armazenadas no banco de dados √†s suas sess√µes
            user.updateSessions(sessions);

            user.message = body;

            bot.states();

        }


    }

    onQr( qrCode: string ){

        qrcode.generate(qrCode,{
            small:true,
        });

    }

    onReady(){

        console.log('ü§ñ: Estou pronto para uso !');

    }

}

export default new WhatsListener();
